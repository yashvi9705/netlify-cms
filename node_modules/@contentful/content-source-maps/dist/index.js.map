{"version":3,"file":"index.js","sources":["../../../node_modules/@vercel/stega/dist/index.mjs","../src/encode.ts","../../../node_modules/foreach/index.js","../../../node_modules/json-pointer/index.js","../src/richText.ts","../src/utils.ts","../src/graphql/encodeGraphQLResponse.ts","../src/rest/encodeCPAResponse.ts"],"sourcesContent":["var s={0:8203,1:8204,2:8205,3:8290,4:8291,5:8288,6:65279,7:8289,8:119155,9:119156,a:119157,b:119158,c:119159,d:119160,e:119161,f:119162},c={0:8203,1:8204,2:8205,3:65279},u=new Array(4).fill(String.fromCodePoint(c[0])).join(\"\"),m=String.fromCharCode(0);function E(t){let e=JSON.stringify(t);return`${u}${Array.from(e).map(r=>{let n=r.charCodeAt(0);if(n>255)throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);return Array.from(n.toString(4).padStart(4,\"0\")).map(o=>String.fromCodePoint(c[o])).join(\"\")}).join(\"\")}`}function y(t){let e=JSON.stringify(t);return Array.from(e).map(r=>{let n=r.charCodeAt(0);if(n>255)throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);return Array.from(n.toString(16).padStart(2,\"0\")).map(o=>String.fromCodePoint(s[o])).join(\"\")}).join(\"\")}function I(t){return!Number.isNaN(Number(t))||/[a-z]/i.test(t)&&!/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t)?!1:Boolean(Date.parse(t))}function T(t){try{new URL(t,t.startsWith(\"/\")?\"https://acme.com\":void 0)}catch{return!1}return!0}function C(t,e,r=\"auto\"){return r===!0||r===\"auto\"&&(I(t)||T(t))?t:`${t}${E(e)}`}var x=Object.fromEntries(Object.entries(c).map(t=>t.reverse())),g=Object.fromEntries(Object.entries(s).map(t=>t.reverse())),S=`${Object.values(s).map(t=>`\\\\u{${t.toString(16)}}`).join(\"\")}`,f=new RegExp(`[${S}]{4,}`,\"gu\");function G(t){let e=t.match(f);if(!!e)return h(e[0],!0)[0]}function $(t){let e=t.match(f);if(!!e)return e.map(r=>h(r)).flat()}function h(t,e=!1){let r=Array.from(t);if(r.length%2===0){if(r.length%4||!t.startsWith(u))return A(r,e)}else throw new Error(\"Encoded data has invalid length\");let n=[];for(let o=r.length*.25;o--;){let p=r.slice(o*4,o*4+4).map(d=>x[d.codePointAt(0)]).join(\"\");n.unshift(String.fromCharCode(parseInt(p,4)))}if(e){n.shift();let o=n.indexOf(m);return o===-1&&(o=n.length),[JSON.parse(n.slice(0,o).join(\"\"))]}return n.join(\"\").split(m).filter(Boolean).map(o=>JSON.parse(o))}function A(t,e){var d;let r=[];for(let i=t.length*.5;i--;){let a=`${g[t[i*2].codePointAt(0)]}${g[t[i*2+1].codePointAt(0)]}`;r.unshift(String.fromCharCode(parseInt(a,16)))}let n=[],o=[r.join(\"\")],p=10;for(;o.length;){let i=o.shift();try{if(n.push(JSON.parse(i)),e)return n}catch(a){if(!p--)throw a;let l=+((d=a.message.match(/\\sposition\\s(\\d+)$/))==null?void 0:d[1]);if(!l)throw a;o.unshift(i.substring(0,l),i.substring(l))}}return n}function _(t){var e;return{cleaned:t.replace(f,\"\"),encoded:((e=t.match(f))==null?void 0:e[0])||\"\"}}function O(t){return t&&JSON.parse(_(JSON.stringify(t)).cleaned)}export{f as VERCEL_STEGA_REGEX,y as legacyStegaEncode,O as vercelStegaClean,C as vercelStegaCombine,G as vercelStegaDecode,$ as vercelStegaDecodeAll,E as vercelStegaEncode,_ as vercelStegaSplit};\n","import {\n  vercelStegaCombine,\n  vercelStegaDecode,\n  vercelStegaEncode,\n  vercelStegaSplit,\n} from '@vercel/stega';\n\nimport type { SourceMapMetadata } from './types.js';\n\nexport function combine(text: string, metadata: SourceMapMetadata): string {\n  return vercelStegaCombine(text, metadata);\n}\n\nexport function encode(metadata: SourceMapMetadata): string {\n  return vercelStegaEncode(metadata);\n}\n\nexport function decode(text: string): SourceMapMetadata | undefined {\n  return vercelStegaDecode(text);\n}\n\nexport function splitEncoding(text: string): {\n  /** The original string with encoded substring removed */\n  cleaned: string;\n  /** The encoded substring from the original string */\n  encoded: string;\n} {\n  return vercelStegaSplit(text);\n}\n","\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nmodule.exports = function forEach (obj, fn, ctx) {\n    if (toString.call(fn) !== '[object Function]') {\n        throw new TypeError('iterator must be a function');\n    }\n    var l = obj.length;\n    if (l === +l) {\n        for (var i = 0; i < l; i++) {\n            fn.call(ctx, obj[i], i, obj);\n        }\n    } else {\n        for (var k in obj) {\n            if (hasOwn.call(obj, k)) {\n                fn.call(ctx, obj[k], k, obj);\n            }\n        }\n    }\n};\n\n","'use strict';\n\nvar each = require('foreach');\nmodule.exports = api;\n\n\n/**\n * Convenience wrapper around the api.\n * Calls `.get` when called with an `object` and a `pointer`.\n * Calls `.set` when also called with `value`.\n * If only supplied `object`, returns a partially applied function, mapped to the object.\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n * @param value\n * @returns {*}\n */\n\nfunction api (obj, pointer, value) {\n    // .set()\n    if (arguments.length === 3) {\n        return api.set(obj, pointer, value);\n    }\n    // .get()\n    if (arguments.length === 2) {\n        return api.get(obj, pointer);\n    }\n    // Return a partially applied function on `obj`.\n    var wrapped = api.bind(api, obj);\n\n    // Support for oo style\n    for (var name in api) {\n        if (api.hasOwnProperty(name)) {\n            wrapped[name] = api[name].bind(wrapped, obj);\n        }\n    }\n    return wrapped;\n}\n\n\n/**\n * Lookup a json pointer in an object\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n * @returns {*}\n */\napi.get = function get (obj, pointer) {\n    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer);\n\n    for (var i = 0; i < refTokens.length; ++i) {\n        var tok = refTokens[i];\n        if (!(typeof obj == 'object' && tok in obj)) {\n            throw new Error('Invalid reference token: ' + tok);\n        }\n        obj = obj[tok];\n    }\n    return obj;\n};\n\n/**\n * Sets a value on an object\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n * @param value\n */\napi.set = function set (obj, pointer, value) {\n    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer),\n      nextTok = refTokens[0];\n\n    if (refTokens.length === 0) {\n      throw Error('Can not set the root object');\n    }\n\n    for (var i = 0; i < refTokens.length - 1; ++i) {\n        var tok = refTokens[i];\n        if (typeof tok !== 'string' && typeof tok !== 'number') {\n          tok = String(tok)\n        }\n        if (tok === \"__proto__\" || tok === \"constructor\" || tok === \"prototype\") {\n            continue\n        }\n        if (tok === '-' && Array.isArray(obj)) {\n          tok = obj.length;\n        }\n        nextTok = refTokens[i + 1];\n\n        if (!(tok in obj)) {\n            if (nextTok.match(/^(\\d+|-)$/)) {\n                obj[tok] = [];\n            } else {\n                obj[tok] = {};\n            }\n        }\n        obj = obj[tok];\n    }\n    if (nextTok === '-' && Array.isArray(obj)) {\n      nextTok = obj.length;\n    }\n    obj[nextTok] = value;\n    return this;\n};\n\n/**\n * Removes an attribute\n *\n * @param {Object} obj\n * @param {String|Array} pointer\n */\napi.remove = function (obj, pointer) {\n    var refTokens = Array.isArray(pointer) ? pointer : api.parse(pointer);\n    var finalToken = refTokens[refTokens.length -1];\n    if (finalToken === undefined) {\n        throw new Error('Invalid JSON pointer for remove: \"' + pointer + '\"');\n    }\n\n    var parent = api.get(obj, refTokens.slice(0, -1));\n    if (Array.isArray(parent)) {\n      var index = +finalToken;\n      if (finalToken === '' && isNaN(index)) {\n        throw new Error('Invalid array index: \"' + finalToken + '\"');\n      }\n\n      Array.prototype.splice.call(parent, index, 1);\n    } else {\n      delete parent[finalToken];\n    }\n};\n\n/**\n * Returns a (pointer -> value) dictionary for an object\n *\n * @param obj\n * @param {function} descend\n * @returns {}\n */\napi.dict = function dict (obj, descend) {\n    var results = {};\n    api.walk(obj, function (value, pointer) {\n        results[pointer] = value;\n    }, descend);\n    return results;\n};\n\n/**\n * Iterates over an object\n * Iterator: function (value, pointer) {}\n *\n * @param obj\n * @param {function} iterator\n * @param {function} descend\n */\napi.walk = function walk (obj, iterator, descend) {\n    var refTokens = [];\n\n    descend = descend || function (value) {\n        var type = Object.prototype.toString.call(value);\n        return type === '[object Object]' || type === '[object Array]';\n    };\n\n    (function next (cur) {\n        each(cur, function (value, key) {\n            refTokens.push(String(key));\n            if (descend(value)) {\n                next(value);\n            } else {\n                iterator(value, api.compile(refTokens));\n            }\n            refTokens.pop();\n        });\n    }(obj));\n};\n\n/**\n * Tests if an object has a value for a json pointer\n *\n * @param obj\n * @param pointer\n * @returns {boolean}\n */\napi.has = function has (obj, pointer) {\n    try {\n        api.get(obj, pointer);\n    } catch (e) {\n        return false;\n    }\n    return true;\n};\n\n/**\n * Escapes a reference token\n *\n * @param str\n * @returns {string}\n */\napi.escape = function escape (str) {\n    return str.toString().replace(/~/g, '~0').replace(/\\//g, '~1');\n};\n\n/**\n * Unescapes a reference token\n *\n * @param str\n * @returns {string}\n */\napi.unescape = function unescape (str) {\n    return str.replace(/~1/g, '/').replace(/~0/g, '~');\n};\n\n/**\n * Converts a json pointer into a array of reference tokens\n *\n * @param pointer\n * @returns {Array}\n */\napi.parse = function parse (pointer) {\n    if (pointer === '') { return []; }\n    if (pointer.charAt(0) !== '/') { throw new Error('Invalid JSON pointer: ' + pointer); }\n    return pointer.substring(1).split(/\\//).map(api.unescape);\n};\n\n/**\n * Builds a json pointer from a array of reference tokens\n *\n * @param refTokens\n * @returns {string}\n */\napi.compile = function compile (refTokens) {\n    if (refTokens.length === 0) { return ''; }\n    return '/' + refTokens.map(api.escape).join('/');\n};\n","import { get, set } from 'json-pointer';\n\nimport { combine } from './encode.js';\nimport type { CPAMappings, GraphQLMappings, SourceMapMetadata } from './types.js';\n\nexport const encodeRichTextValue = ({\n  pointer,\n  mappings,\n  data,\n  hiddenStrings,\n}: {\n  pointer: string;\n  mappings: CPAMappings | GraphQLMappings;\n  data: Node;\n  hiddenStrings: SourceMapMetadata;\n}) => {\n  const source = mappings[pointer];\n  // remove old pointer to rich text field as we will just be mapping the text nodes\n  delete mappings[pointer];\n\n  const textNodes = findRichTextNodes(data, pointer);\n  for (const textNode of textNodes) {\n    mappings[textNode] = source;\n    const currentTextNodeValue = get(data, textNode);\n    const encodedValue = combine(currentTextNodeValue, hiddenStrings);\n    set(data, textNode, encodedValue);\n  }\n};\n\nconst findRichTextNodes = (data: Node, currentPath = ''): string[] => {\n  const textNodes = [];\n  const node = get(data, currentPath);\n\n  if (node.content) {\n    for (let i = 0; i < node.content.length; i++) {\n      if (node.content[i].nodeType === 'text') {\n        textNodes.push(`${currentPath}/content/${i}/value`);\n      } else {\n        textNodes.push(...findRichTextNodes(data, `${currentPath}/content/${i}`));\n      }\n    }\n  }\n\n  return textNodes;\n};\n","import { set } from 'json-pointer';\n\nimport { combine } from './encode.js';\nimport { encodeRichTextValue } from './richText.js';\nimport type {\n  CPAEntry,\n  CPAMappings,\n  CreateSourceMapParams,\n  FieldType,\n  GraphQLMappings,\n  GraphQLResponse,\n  SourceMapMetadata,\n  WidgetId,\n  WidgetNamespace,\n} from './types.js';\n\nexport const createSourceMapMetadata = ({\n  entityId,\n  entityType,\n  space,\n  environment,\n  field,\n  locale,\n  editorInterface,\n  fieldType,\n  targetOrigin,\n  platform,\n}: CreateSourceMapParams): SourceMapMetadata => {\n  const targetOriginUrl = targetOrigin || 'https://app.contentful.com';\n  const basePath = `${targetOriginUrl}/spaces/${space}/environments/${environment}`;\n  const entityRoute = entityType === 'Entry' ? 'entries' : 'assets';\n  const href = `${basePath}/${entityRoute}/${entityId}/?focusedField=${field}&focusedLocale=${locale}&source=vercel-content-link`;\n\n  const result: SourceMapMetadata = {\n    origin: 'contentful.com',\n    href,\n    contentful: {\n      editorInterface,\n      fieldType,\n    },\n  };\n\n  // If the user has specified a platform, we remove the fields that are not relevant to that platform\n  if (platform === 'vercel') {\n    delete result.contentful;\n  }\n\n  return result;\n};\n\nexport const isBuiltinNamespace = (namespace: WidgetNamespace) =>\n  ['builtin', 'sidebar-builtin', 'editor-builtin'].includes(namespace);\nexport const isSupportedWidget = (widgetId: WidgetId) => SUPPORTED_WIDGETS.includes(widgetId);\n\n/**\n * Clones the incoming element into a new one, to prevent modification on the original object\n * Hint: It uses the structuredClone which is only available in modern browsers,\n * for older one it uses the JSON.parse(JSON.stringify) hack.\n */\nexport function clone<T extends Record<string, unknown> | Array<unknown>>(incoming: T): T {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(incoming);\n  }\n\n  try {\n    return JSON.parse(JSON.stringify(incoming));\n  } catch (err) {\n    console.warn('Failed to clone data:', incoming, err);\n    return incoming;\n  }\n}\n\nexport const SUPPORTED_WIDGETS: WidgetId[] = [\n  'singleLine',\n  'tagEditor',\n  'listInput',\n  'checkbox',\n  'richTextEditor',\n  'multipleLine',\n];\n\nexport function encodeField(\n  fieldType: FieldType,\n  currentValue: any,\n  hiddenStrings: SourceMapMetadata,\n  target: GraphQLResponse | CPAEntry,\n  pointer: string,\n  mappings: CPAMappings | GraphQLMappings,\n  locale?: string,\n) {\n  // Determine the value based on locale (if provided)\n  const value = locale ? currentValue[locale] : currentValue;\n\n  // Process based on fieldType\n  switch (fieldType) {\n    case 'Symbol': {\n      const encodedValue = combine(value, hiddenStrings);\n      set(target, pointer, encodedValue);\n      break;\n    }\n\n    case 'Text': {\n      const encodedValue = combine(value, hiddenStrings);\n      set(target, pointer, encodedValue);\n      break;\n    }\n\n    case 'RichText': {\n      encodeRichTextValue({\n        pointer: '',\n        mappings,\n        data: value,\n        hiddenStrings,\n      });\n      break;\n    }\n\n    case 'Array': {\n      const encodedArray = value.map((item: unknown) => {\n        if (typeof item === 'string') {\n          return combine(item, hiddenStrings);\n        } else {\n          return item; // Return the item unchanged if it's not a string\n        }\n      });\n      set(target, pointer, encodedArray);\n      break;\n    }\n  }\n}\n","import { get, has } from 'json-pointer';\n\nimport type { CreateSourceMapParams } from '../types.js';\nimport {\n  clone,\n  createSourceMapMetadata,\n  encodeField,\n  isBuiltinNamespace,\n  isSupportedWidget,\n} from '../utils.js';\n\nexport const encodeGraphQLResponse = <TResponse extends { data: any; extensions: any }>(\n  originalGraphqlResponse: TResponse,\n  targetOrigin?: CreateSourceMapParams['targetOrigin'],\n  platform?: CreateSourceMapParams['platform'],\n): TResponse => {\n  if (\n    !originalGraphqlResponse ||\n    !originalGraphqlResponse.extensions ||\n    !originalGraphqlResponse.extensions.contentSourceMaps\n  ) {\n    console.error(\n      'GraphQL response does not contain Content Source Maps information.',\n      originalGraphqlResponse,\n    );\n    return originalGraphqlResponse;\n  }\n  const modifiedGraphqlResponse = clone(originalGraphqlResponse);\n  const {\n    spaces,\n    environments,\n    editorInterfaces,\n    fields,\n    locales,\n    entries,\n    assets,\n    mappings,\n    fieldTypes,\n  } = modifiedGraphqlResponse.extensions.contentSourceMaps;\n  const target = modifiedGraphqlResponse;\n\n  for (const pointer in mappings) {\n    const { source } = mappings[pointer];\n\n    const entity = 'entry' in source ? entries[source.entry] : assets[source.asset];\n    const entityType = 'entry' in source ? 'Entry' : 'Asset';\n\n    if (!entity) {\n      return modifiedGraphqlResponse;\n    }\n\n    const space = spaces[entity.space];\n    const environment = environments[entity.environment];\n    const entityId = entity.id;\n    const field = fields[source.field];\n    const locale = locales[source.locale];\n    const editorInterface = editorInterfaces[source.editorInterface];\n    const fieldType = fieldTypes[source.fieldType];\n\n    // Skip unsupported widgets\n    if (\n      isBuiltinNamespace(editorInterface.widgetNamespace) &&\n      !isSupportedWidget(editorInterface.widgetId)\n    ) {\n      continue;\n    }\n\n    if (has(target, pointer)) {\n      const currentValue = get(target, pointer);\n\n      if (currentValue !== null) {\n        const hiddenStrings = createSourceMapMetadata({\n          entityId,\n          entityType,\n          space,\n          environment,\n          field,\n          locale,\n          editorInterface,\n          fieldType,\n          targetOrigin,\n          platform,\n        });\n\n        encodeField(fieldType, currentValue, hiddenStrings, target, pointer, mappings);\n      }\n    } else {\n      //@TODO - add Sentry logging\n      // console.warn(`Pointer ${pointer} not found in the entry`, target);\n    }\n  }\n  return modifiedGraphqlResponse;\n};\n","import { get, has } from 'json-pointer';\n\nimport type {\n  CPAEntry,\n  CPAEntryCollection,\n  EditorInterfaceSource,\n  FieldType,\n  CreateSourceMapParams,\n} from '../types.js';\nimport {\n  clone,\n  createSourceMapMetadata,\n  encodeField,\n  isBuiltinNamespace,\n  isSupportedWidget,\n} from '../utils.js';\n\nconst applyEncoding = (\n  target: CPAEntry,\n  fieldTypes: FieldType[],\n  editorInterfaces: EditorInterfaceSource[],\n  targetOrigin?: CreateSourceMapParams['targetOrigin'],\n  platform?: CreateSourceMapParams['platform'],\n) => {\n  if (!target.fields) {\n    return;\n  }\n\n  const { contentSourceMaps } = target.sys;\n\n  if (!contentSourceMaps) {\n    console.error('Content source maps data is missing');\n    return;\n  }\n\n  const { mappings } = contentSourceMaps;\n\n  for (const pointer in mappings) {\n    const { source } = mappings[pointer];\n    const space = target.sys.space.sys.id;\n    const environment = target.sys.environment.sys.id;\n    const entityId = target.sys.id;\n    const entityType = target.sys.type;\n    const fieldType = fieldTypes[source.fieldType];\n    const editorInterface = editorInterfaces[source.editorInterface];\n\n    // Skip unsupported widgets\n    if (\n      isBuiltinNamespace(editorInterface.widgetNamespace) &&\n      !isSupportedWidget(editorInterface.widgetId)\n    ) {\n      continue;\n    }\n\n    const formattedPointer = pointer.startsWith('/') ? pointer : `/${pointer}`;\n\n    if (has(target, formattedPointer)) {\n      const currentValue = get(target, formattedPointer);\n      if (currentValue === null) {\n        return;\n      }\n      const fieldParts = formattedPointer.split('/'); // Split the pointer into parts\n      const field = fieldParts.pop(); // Get the last part, which is the field name\n      if (!field) {\n        console.error('Field name could not be extracted from the pointer', formattedPointer);\n        return;\n      }\n      const locale = target.sys.locale;\n\n      // Determine if we are dealing with multiple locale values in the response or just a single locale\n      if (locale) {\n        const hiddenStrings = createSourceMapMetadata({\n          entityId,\n          entityType,\n          space,\n          environment,\n          field,\n          locale,\n          editorInterface,\n          fieldType,\n          targetOrigin,\n          platform,\n        });\n\n        encodeField(fieldType, currentValue, hiddenStrings, target, formattedPointer, mappings);\n      } else {\n        const locales = Object.keys(currentValue);\n        locales.forEach((locale) => {\n          const hiddenStrings = createSourceMapMetadata({\n            entityId,\n            entityType,\n            space,\n            environment,\n            field,\n            locale,\n            editorInterface,\n            fieldType,\n            targetOrigin,\n            platform,\n          });\n\n          encodeField(\n            fieldType,\n            currentValue,\n            hiddenStrings,\n            target,\n            `${formattedPointer}/${locale}`,\n            mappings,\n            locale,\n          );\n        });\n      }\n    } else {\n      //@TODO - add Sentry logging\n      // console.warn(`Pointer ${pointer} not found in the entry`, target);\n    }\n  }\n};\n\nexport const encodeCPAResponse = (\n  CPAResponse: CPAEntry | CPAEntryCollection,\n  targetOrigin?: CreateSourceMapParams['targetOrigin'],\n  platform?: CreateSourceMapParams['platform'],\n): CPAEntry | CPAEntryCollection => {\n  const modifiedCPAResponse = clone(\n    CPAResponse as unknown as Record<string, unknown>,\n  ) as unknown as CPAEntry | CPAEntryCollection;\n\n  // Entity collections\n  if (modifiedCPAResponse.sys && 'items' in (modifiedCPAResponse as CPAEntryCollection)) {\n    const collection = modifiedCPAResponse as CPAEntryCollection;\n    if (!collection.sys?.contentSourceMapsLookup) {\n      console.error('Content source maps lookup data is missing');\n      return collection;\n    }\n    const {\n      contentSourceMapsLookup: { fieldTypes, editorInterfaces },\n    } = collection.sys;\n    const { items, includes } = collection;\n\n    items.forEach((target) =>\n      applyEncoding(target, fieldTypes, editorInterfaces, targetOrigin, platform),\n    );\n    if (includes && includes.Entry) {\n      includes.Entry.forEach((entry) =>\n        applyEncoding(entry, fieldTypes, editorInterfaces, targetOrigin, platform),\n      );\n    }\n    if (includes && includes.Asset) {\n      includes.Asset.forEach((asset) =>\n        applyEncoding(asset, fieldTypes, editorInterfaces, targetOrigin, platform),\n      );\n    }\n    // Single entity\n  } else {\n    const entry = modifiedCPAResponse as CPAEntry;\n    if (!entry.sys.contentSourceMapsLookup) {\n      console.error('Content source maps lookup data is missing');\n      return entry;\n    }\n\n    applyEncoding(\n      entry,\n      entry.sys.contentSourceMapsLookup.fieldTypes,\n      entry.sys.contentSourceMapsLookup.editorInterfaces,\n      targetOrigin,\n      platform,\n    );\n  }\n\n  return modifiedCPAResponse;\n};\n"],"names":["s","c","u","m","E","t","e","r","o","I","T","C","x","g","S","f","G","h","A","p","d","i","a","n","l","_","combine","text","metadata","vercelStegaCombine","encode","vercelStegaEncode","decode","vercelStegaDecode","splitEncoding","vercelStegaSplit","hasOwn","toString","foreach","obj","fn","ctx","k","each","require$$0","jsonPointer","api","pointer","value","wrapped","name","refTokens","tok","nextTok","finalToken","parent","index","descend","results","iterator","type","next","cur","key","str","encodeRichTextValue","mappings","data","hiddenStrings","source","textNodes","findRichTextNodes","textNode","currentTextNodeValue","get","encodedValue","set","currentPath","node","createSourceMapMetadata","entityId","entityType","space","environment","field","locale","editorInterface","fieldType","targetOrigin","platform","result","isBuiltinNamespace","namespace","isSupportedWidget","widgetId","SUPPORTED_WIDGETS","clone","incoming","err","encodeField","currentValue","target","encodedArray","item","encodeGraphQLResponse","originalGraphqlResponse","modifiedGraphqlResponse","spaces","environments","editorInterfaces","fields","locales","entries","assets","fieldTypes","entity","has","applyEncoding","contentSourceMaps","formattedPointer","encodeCPAResponse","CPAResponse","_a","modifiedCPAResponse","collection","items","includes","entry","asset"],"mappings":"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","x_google_ignoreList":[0,2,3]}